class EMS(const MAX_FROM_HEM):
signature:
	visible: ;

	domains:
		Resp: {Go,Warn};


	items:

	event washControl();

	state washPower(natural);

	event msgToWash(Resp);

	event ovenControl();

	state ovenPower(natural);

	state legacyPower1(natural);

	state windmillPower(natural);

	state solarPower(natural);

	state overflow;

	state hemPower(natural);

	state consumption(natural);

	state max(natural);

	axioms:
		formulae:

		ConsumptionDefinition:
		consumption(i) <-> washPower(a1) & ovenPower(a2) & legacyPower1(a3) & (i=a1+a2+a3)  &
		production(i) <-> windmillPower(a1) & solarPower(a2) & (i=a1+a2)  &
		max(i) = production(a) & (i= a + MAX_FROM_HEM);

		ResponsesFromEMS:
		washControl(i,m,p,t,s,d,sh,b) & consumption(cons) & (cons + p < max) -> (msgToWash(Go) & washPower(p)) &
		washControl(i,m,p,t,s,d,sh,0) & consumption(cons) & (cons + p > max) -> msgToWash(Warn) & washPower(0);

		PowerBalance:
		consumption(con) & production(prod) & hemPower(bought) -> con=production+bought  &
		(washPower + ovenPower + legacyPower1 <= windmillPower + solarPower ) -> (hemPower=0) &
		(hemPower>=MAX_FROM_HEM) -> overflow;

		OverflowMeasuresShed:
		overflow & washState(i,t) & SomP(washControl(i,May,p,t,s,d,1,b)) ->  msgToWash(Warn) & washPower(0);

		OverflowMeasuresShift:
		overflow & washState(i,t) & SomP(washControl(i,May,p,t,s,d,sh,b)) & s>1 & washPower > 0-> (Lasts(washPower=0,d) | WithinF(consumption+p<max,d) ) &
		consumption(cons) & (cons+p<max) & washState(i,t) & SomP(washControl(i,May,p,t,s,d,sh,b)) & s>1 & t>0 & washPower(0) -> washPower(p)


