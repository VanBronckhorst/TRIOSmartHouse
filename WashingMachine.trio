class WashingMachine( const MaxPower,const MaxSlots,const MaxDelay)
inherit device:
{}
signature:
	visible:
		/*
			input
		*/
	    StartTask1,StartTask2;


	items:

		

		/*
		   Event triggered to start task1, which is a must task.
		   @param natural: amount of time after that the task can be scheduled.
		*/
		event startTask1(natural);

		/*
		   Event triggered to start task2, which is a may task.
		   @param natural: amount of time after that the task can be scheduled.
		*/
		event startTask2(natural);


	axioms:

		formulae:

			
			/*
				This formulae ensure that the task 1 is requested to the ems after the specified Delay Time
			*/
			ScheduleTask1:
				startTask1(t) -> Futr(requestTask(i,Must,DEV_POW,TASK_TIME,1,0,0) ,t) &
				requestTask(i,Must,DEV_POW,1,0,0) -> ex(t1)( Past(startTask1(t1),t1)); 

			/*
				This formulae ensure that the task 2 is requested to the ems after the specified Delay Time
			*/
			ScheduleTask2:
				startTask2(t) -> Futr(requestTask(i,May,DEV_POW,TASK_TIME,3,300,0) ,t) &
				requestTask(i,May,DEV_POW,3,300,0) -> ex(t1)( Past(startTask2(t1),t1));

end
			 	